For example, the /var directory itself cannot be categorized as either shareable or not sharable, but one of its subdirectories, the /var/mail directory, is shareable. Conversely the /var/lock directory should not be shareable.

Not Sharable	Sharable
Variable	/var/lock	/var/mail
Static	/etc	/opt


irectory	Purpose of Directory
/	The base of the structure, or root of the filesystem, this directory unifies all directories regardless of if they are local partitions, removable devices or network shares
/bin	To hold essential binaries like the ls, cp, and rm commands, and be a part of the root filesystem.
/boot	Holds files necessary to boot the system such as the Linux kernel and associated configuration files
/dev	Populated with files that represent hardware devices and other special files, such as the /dev/null and /dev/zero files
/etc	Contain essential host configurations files such as the /etc/hosts or /etc/passwd files
/home	The location of user home directories
/lib	The essential libraries to support the executable files in the /bin and /sbin directories
/lib<qual>	Essential libraries built for a specific architecture. For example, the /lib64 directory for 64 bit AMD/Intel x86 compatible processors
/media	The mount point for removable media mounted automatically
/mnt	A mount point for temporarily mounting filesystems manually
/opt	Optional third party software installation location
/proc	A virtual filesystem for the kernel to report process and other information
/root	The home directory of the root user
/sbin	The essential system binaries primarily used by the root user
/sys	A virtual filesystem holding information about hardware devices connected to the system
/srv	Location where site specific services may be hosted
/tmp	Directory where all users are allowed to create temporary files that is supposed to be cleared at boot time (but often is not)
/usr	Second hierarchy of non-essential files for multi-user use.
/usr/local	Third hierarchy of files for software not originating from distribution
/var	The /var hierarchy contains files that change over time
/var/cache	Files used for caching application data
/var/log	Directory where most log files are kept
/var/lock	Where lock files are kept for shared resources
/var/spool	Where spool files for printing and mail are stored
/var/tmp	Temporary files to be preserved between reboots



The second and third hierarchies, located under the /usr and /usr/local directories, repeat the pattern of many of the key directories found under the first hierarchy or root filesystem. The fourth hierarchy, the /var directory, also repeats some of the top level directories such as lib, opt and tmp.

Where the root filesystem and its contents are considered essential or necessary to boot the system, the /var, /usr and /usr/local directories are deemed non-essential for the boot process. As a result, the root filesystem and its directories may be the only ones available in certain situations like booting into single user mode, an environment designed for troubleshooting the system.

The /usr directory is intended to hold software for use by multiple users. The /usr directory is sometimes shared over the network and mounted read-only. Common second-level directories are described in the following table:

Directory	Purpose of Directory
/usr/bin	Binaries for ordinary user, used when the system is in multiuser mode
/usr/include	Files to be included to compile software from distribution
/usr/lib	Libraries to support the executable files in the /usr/bin and /usr/sbin directories
/usr/lib<qual>	Non-essential libraries built for a specific architecture
/usr/libexec	Executable programs to be used by other programs and not directly by users
/usr/sbin	System binaries for use by administrator in multiuser mode
/usr/share	Where software documentation and other application data is stored
/usr/src	The source code for compiling the kernel
The /usr/local hierarchy is for installation of software that does not originate with the distribution. Often this directory is used for software that is compiled from the source code. Common third-level directories found under the /usr/local directory are described in the following table:

Directory	Purpose of Directory
/usr/local/bin	Local software binaries for ordinary user use
/usr/local/etc	Local software configuration files
/usr/local/include	Files that need to be included in order to compile local source code
/usr/local/lib	Library files to support the executable files in the /usr/local/bin and /usr/local/sbin directories
/usr/local/libexec	Local executable programs to be used by other programs and not directly by users
/usr/local/sbin	Local binaries for system administrator use
/usr/local/share	Where local software man pages, information pages, and other local application information is stored
/usr/local/src	The location where source code for software to be compiled locally is often placed





16.9 Organization Within the Filesystem Hierarchy
Although the FHS standard is helpful for a detailed understanding of the layout of the directories used by most Linux distributions, the following provides a more generalized description of the layout of directories as they actually exist on a typical Linux distribution.

User Home Directories

The /home directory will typically have a directory underneath it for each user account. For example, the user bob will normally have a home directory of /home/bob. Typically, only the user bob will have access to this directory. Without being assigned special permissions on other directories, a user can typically only create files in their home directory, the /tmp directory and the /var/tmp directory.

Binary Directories

Binary directories contain the programs that users and administrators execute to start processes or applications running on the system. The binary directories that are intended to be used by non-privileged users include the /bin, /usr/bin and /usr/local/bin directories. Sometimes third-party software will also store their executable files in directories such as the /usr/local/application/bin and /opt/application/bin directories. In addition, it is not unusual for each user to have their own bin directory located in their home directory, such as /home/bob/bin.

On the other hand, the sbin directories are primarily intended to be used by the system administrator (the root user). These usually include the /sbin,/usr/sbin and /usr/local/sbin directories, although third-party administrative applications could also use directories such as /usr/local/application/sbin or /opt/application/sbin.

Depending on the distribution, the PATH variable may not contain all of the bin and sbin directories. In order to be able to execute a command in one of these directories, the directory needs to be included in the PATH variable list or the user needs to specify the path to the command, for example: /sbin/ifconfig.

Software Application Directories

Unlike the Windows operating system, where applications may have all of their files installed in a single subdirectory under the C:\Program Files directory, applications in Linux may have their files in multiple directories spread out throughout the Linux filesystem. For Debian-derived distributions, you can execute dpkg -L application to get the list of file locations. In Red Hat-derived distributions, you can run rpm -ql application for the list of the locations of the files that belong to that application.

The executable program binary files may go in the /usr/bin directory, if they are included with the operating system, or else they may go into the /usr/local/bin or /opt/application/bin directories if they came from a third party.

The data for the application may be stored in one of the following subdirectories: /usr/share, /usr/lib, /opt/application or /var/lib.

The file related to documentation may be stored in one of the following subdirectories: /usr/share/doc, /usr/share/man or /usr/share/info.

The global configuration file(s) for an application will most likely be stored in a subdirectory under the /etc directory, while the personalized configuration files (specific for a user) for the application are probably in a hidden subdirectory of the user's home directory.

Library Directories

Libraries are files which contain code that is shared between multiple programs. Most library file names will end in a file extension of .so, which means shared object.

Multiple versions of a library may be present because the code may be different within each file even though it may perform similar functions as other versions of the library. One of the reasons that the code may be different, even though it may do the same thing as another library file, is that it is compiled to run on a different kind of processor. For example, it is typical for systems that use code designed for 64 bit Intel/AMD type processors to have both 32 bit libraries and 64 bit libraries.

The libraries that support the essential binary programs found in the /bin and /sbin directories will typically be located in either /lib or /lib64.

To support the /usr/bin and /usr/sbin executables, the /usr/lib and /usr/lib64 library directories are typically used.

For supporting applications that are not distributed with the operating system, the /usr/local/lib and /opt/application/lib library directories are frequently used.

Variable Data Directories

The /var directory and many of its subdirectories can contain data that will change frequently. If your system is used for email, then either /var/mail or /var/spool/mail is normally used to store user's email data. If you are printing from your system, then the /var/spool/cups directory is used to temporarily store the print jobs.

Depending on what events your system is logging and how much activity there is on the system will determine how large your log file will become. On a busy system, there could be considerable amount of data in the log files. These files are stored in the /var/log directory.

While the log files can be extremely useful for troubleshooting problems, they can cause problems. One major concern for all of these directories is that they can fill up the disk space quickly on an active system. If the /var directory is not a separate partition, then the root filesystem could become full and cause the system to crash.

